ifelse(grepl("tf2", countData$sample, ignore.case = T), "tf2", "unknown"))
countData$tissue <- ifelse(grepl("other", countData$sample, ignore.case = T), "other",
ifelse(grepl("mbr", countData$sample, ignore.case = T), "mbr", "unknown"))
#Set Region
countData$region <- ifelse(grepl("a", countData$sample, ignore.case = T), "A",
ifelse(grepl("c", countData$sample, ignore.case = T), "C", "B"))
countData$type <- paste(countData$region, countData$tissue,  sep = "")
head(countData)
scale_data <- as.matrix(t(scale(t(allGenes25[c(8:13)]))))
countData <- read.csv("../data/output/analysis4.top25_19Oct2017.csv")
countData <- read.csv("../data/output/analysis4.top25_19Oct2017.csv")
countData <- countData[,-1]
setwd("~/")
setwd("~/Dropbox/Research/LCMProject/08SOM/lcmSOM_2/R")
countData <- countData[,-1]
countData <- read.csv("../data/output/analysis4.top25_19Oct2017.csv")
countData <- countData[,-1]
#Melt count data
countData <- melt(countData)
colnames(countData) <- c("gene", "sample", "count")
#set genotype
countData$genotype <- ifelse(grepl("wt", countData$sample, ignore.case = T), "wt",
ifelse(grepl("tf2", countData$sample, ignore.case = T), "tf2", "unknown"))
#set tissue
countData$tissue <- ifelse(grepl("other", countData$sample, ignore.case = T), "other",
ifelse(grepl("mbr", countData$sample, ignore.case = T), "mbr", "unknown"))
#Set Region
countData$region <- ifelse(grepl("a", countData$sample, ignore.case = T), "A",
ifelse(grepl("c", countData$sample, ignore.case = T), "C", "B"))
#Set type
countData$type <- paste(countData$region, countData$tissue,  sep = "")
##Wildtype only
mostDEgenesWT <- read.csv("../data/allGeneList.csv") #WT
setwd("~/Dropbox/Research/LCMProject/08SOM/lcmSOM_2/R")
##Wildtype only
mostDEgenesWT <- read.csv("../data/allGeneList.csv") #WT
head(countData)
scale_data <- as.matrix(t(scale(t(mostDEgene.long[c(3)]))))
head(scale_data)
head(countData)
setwd("~/Dropbox/Research/LCMProject/08SOM/lcmSOM_1/r")
#Read in count data
countData <- read.csv("../data/normalized_read_count.csv")
#Melt count data
countData <- melt(countData)
colnames(countData) <- c("gene", "sample", "count")
countData$genotype <- ifelse(grepl("wt", countData$sample, ignore.case = T), "wt",
ifelse(grepl("tf2", countData$sample, ignore.case = T), "tf2", "unknown"))
countData$tissue <- ifelse(grepl("other", countData$sample, ignore.case = T), "other",
ifelse(grepl("mbr", countData$sample, ignore.case = T), "mbr", "unknown"))
#Set Region
countData$region <- ifelse(grepl("a", countData$sample, ignore.case = T), "A",
ifelse(grepl("c", countData$sample, ignore.case = T), "C", "B"))
countData$type <- paste(countData$region, countData$tissue,  sep = "")
head(countData)
mostDEgenes <- read.csv("../data/allGeneListBothGenotypes_analysis5d_reranorginal.csv")
head(mostDEgenes)
allGenes25 <- read.csv( "../data/output/analysis4.top25_19Oct2017.csv")
colnames(allGenes25)
setwd("~/Dropbox/Research/LCMProject/08SOM/lcmSOM_2/R")
allGenes25 <- read.csv( "../data/output/analysis4.top25_19Oct2017.csv")
colnames(allGenes25)
countData <- read.csv("../data/output/analysis4.top25_19Oct2017.csv")
countData <- countData[,-1]
head(countData)
head(countData)
scale_data <- as.matrix(t(scale(t(mostDEgene.long[c(2:13)]))))
scale_data <- as.matrix(t(scale(t(countData[c(2:13)]))))
head(scale_data)
#Principle Component Analysis
pca <- prcomp(scale_data, scale=TRUE)
summary(pca)
pca.scores <- data.frame(pca$x)
head(pca.scores)
data.val <- cbind(countData, scale_data, pca.scores)
head(data.val)
p <- ggplot(data.val, aes(PC1, PC2))
p + geom_point()
set.seed(6)
names(data.val)
head(scale_data)
head(countData)
head(scale_data)
head(countData[,1])
cbind(countData[,1], scale_data)
scale_data_2 <- cbind(countData[,1], scale_data)
scale_data_2
head(scale_data_2)
countData[,1]
scale_data_2 <- cbind(countData$gene, scale_data)
head(scale_data_2)
countData$gene
scale_data_2 <- cbind(countData$gene, scale_data)
head(scale_data_2)
scale_data <- t(scale(t(countData[c(2:13)])))
scale_data_2 <- cbind(countData$gene, scale_data)
head(scale_data_2)
head(scale_data)
str(scale_data)
scale_data <- as.data.frame(t(scale(t(countData[c(2:13)]))))
head(scale_data)
scale_data_2 <- cbind(countData$gene, scale_data)
head(scale_data_2)
scale_data <- cbind(countData$gene, scale_data)
colnames(scale_data)[1]
colnames(scale_data)[1] <- "gene"
#Melt count data
countData <- melt(scale_data)
head(countData)
colnames(countData) <- c("gene", "sample", "count")
#set genotype
countData$genotype <- ifelse(grepl("wt", countData$sample, ignore.case = T), "wt",
ifelse(grepl("tf2", countData$sample, ignore.case = T), "tf2", "unknown"))
#set tissue
countData$tissue <- ifelse(grepl("other", countData$sample, ignore.case = T), "other",
ifelse(grepl("mbr", countData$sample, ignore.case = T), "mbr", "unknown"))
#Set Region
countData$region <- ifelse(grepl("a", countData$sample, ignore.case = T), "A",
ifelse(grepl("c", countData$sample, ignore.case = T), "C", "B"))
#Set type
countData$type <- paste(countData$region, countData$tissue,  sep = "")
head(countData)
#Principle Component Analysis
pca <- prcomp(scale_data, scale=TRUE)
set.seed(6)
names(countData)
head(superSomData)
setwd("~/Dropbox/Research/LCMProject/08SOM/lcmSOM_1/r")
mostDEgenes <- read.csv("../data/allGeneListBothGenotypes_analysis5d_reranorginal.csv")
head(mostDEgenes)
mostDEgenes <- mostDEgenes[c(7, 2, 1, 4)] #keep only needed columns (gene, genotype, type, mean)
head(mostDEgenes)
#Change from long to wide data format
mostDEgene.long <- cast(mostDEgenes, genotype + gene ~ type, value.var = mean, fun.aggregate = "mean")  #why did I have to specify "mean" here? Are there duplicates of types? Double check later.
head(mostDEgene.long)
mostDEgene.long <- as.data.frame(mostDEgene.long)
names(mostDEgene.long)
scale_data <- as.matrix(t(scale(t(mostDEgene.long[c(3:8)]))))
head(scale_data)
#Principle Component Analysis
pca <- prcomp(scale_data, scale=TRUE)
summary(pca)
pca.scores <- data.frame(pca$x)
data.val <- cbind(mostDEgene.long, scale_data, pca.scores)
head(data.val)
set.seed(6)
names(data.val)
superSomData <- data.val[,c(1:8)]
head(superSomData)
head(countData)
mostDEgene.long <- cast(countData, genotype + gene ~ type, value.var = count, fun.aggregate = "mean")
countData_sub <- countData[,c(1,7,4,3)]
head(countData_sub)
mostDEgene.long <- cast(countData_sub, genotype + gene ~ type, value.var = count, fun.aggregate = "mean")
head(mostDEgene.long)
head(mostDEgene.long)
head(superSomData)
superSomData <- cast(countData_sub, genotype + gene ~ type, value.var = count, fun.aggregate = "mean")
tf2 <- subset(superSomData, genotype == "tf2", select = 3:8)
wt <- subset(superSomData, genotype == "wt", select = 3:8)
wt <- as.matrix(wt)
tf2 <- as.matrix(tf2)
ssom <- supersom(superSomData, somgrid(6, 6, "hexagonal"), weights=c(0.5,0.5))
all.data <- as.matrix(superSomData[,3:8])
head(all.data)
mostDEgenes <- read.csv("../data/allGeneListBothGenotypes_analysis5d_reranorginal.csv")
head(mostDEgenes)
mostDEgenes <- mostDEgenes[c(7, 2, 1, 4)] #keep only needed columns (gene, genotype, type, mean)
head(mostDEgenes)
#Change from long to wide data format
mostDEgene.long <- cast(mostDEgenes, genotype + gene ~ type, value.var = mean, fun.aggregate = "mean")  #why did I have to specify "mean" here? Are there duplicates of types? Double check later.
head(mostDEgene.long)
mostDEgene.long <- as.data.frame(mostDEgene.long)
names(mostDEgene.long)
scale_data <- as.matrix(t(scale(t(mostDEgene.long[c(3:8)]))))
head(scale_data)
#Principle Component Analysis
pca <- prcomp(scale_data, scale=TRUE)
summary(pca)
data.val <- cbind(mostDEgene.long, scale_data, pca.scores)
head(data.val)
names(data.val)
superSomData <- data.val[,c(1:8)]
tf2 <- subset(superSomData, genotype == "tf2", select = 3:8)
wt <- subset(superSomData, genotype == "wt", select = 3:8)
wt <- as.matrix(wt)
tf2 <- as.matrix(tf2)
sc.wt <- t(scale(t(wt)))
sc.tf2 <- t(scale(t(tf2)))
all.data <- list(sc.wt,sc.tf2)
head(all.data)
superSomData <- data.val[,c(1:8)]
tf2 <- subset(superSomData, genotype == "tf2", select = 3:8)
wt <- subset(superSomData, genotype == "wt", select = 3:8)
wt <- as.matrix(wt)
tf2 <- as.matrix(tf2)
sc.wt <- t(scale(t(wt)))
sc.tf2 <- t(scale(t(tf2)))
Class
head(sc.wt)
all.data <- list(sc.wt,sc.tf2)
head(all.data)
all.data <- list(sc.wt,sc.tf2)
head(all.data)
ssom <- supersom(all.data, somgrid(6, 6, "hexagonal"),weights=c(0.5,0.5))
mostDEgenes <- read.csv("../data/allGeneListBothGenotypes_analysis5d_reranorginal.csv")
head(mostDEgenes)
mostDEgenes <- mostDEgenes[c(7, 2, 1, 4)] #keep only needed columns (gene, genotype, type, mean)
head(mostDEgenes)
#Change from long to wide data format
mostDEgene.long <- cast(mostDEgenes, genotype + gene ~ type, value.var = mean, fun.aggregate = "mean")  #why did I have to specify "mean" here? Are there duplicates of types? Double check later.
head(mostDEgene.long)
mostDEgene.long <- as.data.frame(mostDEgene.long)
names(mostDEgene.long)
scale_data <- as.matrix(t(scale(t(mostDEgene.long[c(3:8)]))))
head(scale_data)
#Principle Component Analysis
pca <- prcomp(scale_data, scale=TRUE)
summary(pca)
pca.scores <- data.frame(pca$x)
data.val <- cbind(mostDEgene.long, scale_data, pca.scores)
head(data.val)
p <- ggplot(data.val, aes(PC1, PC2))
p + geom_point()
set.seed(6)
names(data.val)
superSomData <- data.val[,c(1:8)]
tf2 <- subset(superSomData, genotype == "tf2", select = 3:8)
wt <- subset(superSomData, genotype == "wt", select = 3:8)
wt <- as.matrix(wt)
tf2 <- as.matrix(tf2)
sc.wt <- t(scale(t(wt)))
sc.tf2 <- t(scale(t(tf2)))
all.data <- list(sc.wt,sc.tf2)
head(all.data)
ssom <- supersom(all.data, somgrid(6, 6, "hexagonal"),weights=c(0.5,0.5))
summary(ssom)
par(mfrow = c(3, 2))
mostDEgenes <- read.csv("../data/allGeneListBothGenotypes_analysis5d_reranorginal.csv")
mostDEgenes <- mostDEgenes[c(7, 2, 1, 4)] #keep only needed columns (gene, genotype, type, mean)
head(mostDEgenes)
#Change from long to wide data format
mostDEgene.long <- cast(mostDEgenes, genotype + gene ~ type, value.var = mean, fun.aggregate = "mean")  #why did I have to specify "mean" here? Are there duplicates of types? Double check later.
head(mostDEgene.long)
mostDEgene.long <- as.data.frame(mostDEgene.long)
names(mostDEgene.long)
scale_data <- as.matrix(t(scale(t(mostDEgene.long[c(3:8)]))))
head(scale_data)
#Principle Component Analysis
pca <- prcomp(scale_data, scale=TRUE)
summary(pca)
pca.scores <- data.frame(pca$x)
data.val <- cbind(mostDEgene.long, scale_data, pca.scores)
head(data.val)
p <- ggplot(data.val, aes(PC1, PC2))
p + geom_point()
set.seed(6)
names(data.val)
superSomData <- data.val[,c(1:8)]
tf2 <- subset(superSomData, genotype == "tf2", select = 3:8)
wt <- subset(superSomData, genotype == "wt", select = 3:8)
wt <- as.matrix(wt)
tf2 <- as.matrix(tf2)
sc.wt <- t(scale(t(wt)))
sc.tf2 <- t(scale(t(tf2)))
all.data <- list(sc.wt,sc.tf2)
head(all.data)
ssom <- supersom(all.data, somgrid(6, 6, "hexagonal"),weights=c(0.5,0.5))
mostDEgenes <- read.csv("../data/allGeneListBothGenotypes_analysis5d_reranorginal.csv")
head(mostDEgenes)
#Change from long to wide data format
mostDEgene.long <- cast(mostDEgenes, genotype + gene ~ type, value.var = mean, fun.aggregate = "mean")  #why did I have to specify "mean" here? Are there duplicates of types? Double check later.
head(mostDEgene.long)
mostDEgene.long <- as.data.frame(mostDEgene.long)
names(mostDEgene.long)
scale_data <- as.matrix(t(scale(t(mostDEgene.long[c(3:8)]))))
head(scale_data)
#Principle Component Analysis
pca <- prcomp(scale_data, scale=TRUE)
summary(pca)
pca.scores <- data.frame(pca$x)
data.val <- cbind(mostDEgene.long, scale_data, pca.scores)
head(data.val)
genes25 <- read.csv("../data/analysis4.top25.csv")
head(genes25)
genes25 <- genes25[,c(2:14)]
m.genes25 <- melt(genes25)
head(m.genes25)
names(m.genes25) <- c("gene", "sample", "mean")
m.genes25$genotype <- ifelse(grepl("wt", m.genes25$sample, ignore.case = T), "wt",
ifelse(grepl("tf2", m.genes25$sample, ignore.case = T), "tf2", "unknown"))
#Set Region
m.genes25$region <- ifelse(grepl("a", m.genes25$sample, ignore.case = T), "A",
ifelse(grepl("c", m.genes25$sample, ignore.case = T), "C", "B"))
m.genes25$type <- paste(m.genes25$region, m.genes25$tissue,  sep = "")
head(m.genes25)
m.genes25.sub <- m.genes25[,c(1,7,4,3)]
head(m.genes25.sub)
#Change from long to wide data format
m.genes25.long <- cast(m.genes25.sub, genotype + gene ~ type, value.var = mean, fun.aggregate = "mean")
m.genes25.long <- as.data.frame(m.genes25.long)
genes25 <- read.csv("../data/analysis4.top25.csv")
head(genes25)
genes25 <- genes25[,c(2:14)]
m.genes25 <- melt(genes25)
head(m.genes25)
names(m.genes25) <- c("gene", "sample", "mean")
m.genes25$genotype <- ifelse(grepl("wt", m.genes25$sample, ignore.case = T), "wt",
ifelse(grepl("tf2", m.genes25$sample, ignore.case = T), "tf2", "unknown"))
m.genes25$tissue <- ifelse(grepl("other", m.genes25$sample, ignore.case = T), "other",
ifelse(grepl("mbr", m.genes25$sample, ignore.case = T), "mbr", "unknown"))
#Set Region
m.genes25$region <- ifelse(grepl("a", m.genes25$sample, ignore.case = T), "A",
ifelse(grepl("c", m.genes25$sample, ignore.case = T), "C", "B"))
m.genes25$type <- paste(m.genes25$region, m.genes25$tissue,  sep = "")
head(m.genes25)
head(m.genes25)
names(m.genes25) <- c("gene", "sample", "mean")
m.genes25$genotype <- ifelse(grepl("wt", m.genes25$sample, ignore.case = T), "wt",
ifelse(grepl("tf2", m.genes25$sample, ignore.case = T), "tf2", "unknown"))
m.genes25$tissue <- ifelse(grepl("other", m.genes25$sample, ignore.case = T), "other",
ifelse(grepl("mbr", m.genes25$sample, ignore.case = T), "mbr", "unknown"))
#Set Region
m.genes25$region <- ifelse(grepl("a", m.genes25$sample, ignore.case = T), "A",
ifelse(grepl("c", m.genes25$sample, ignore.case = T), "C", "B"))
m.genes25$type <- paste(m.genes25$region, m.genes25$tissue,  sep = "")
head(m.genes25)
m.genes25.sub <- m.genes25[,c(1,7,4,3)]
head(m.genes25.sub)
genes25 <- read.csv("../data/analysis4.top25.csv")
head(genes25)
genes25 <- genes25[,c(2:14)]
m.genes25 <- melt(genes25)
head(m.genes25)
names(m.genes25) <- c("gene", "sample", "mean")
m.genes25$genotype <- ifelse(grepl("wt", m.genes25$sample, ignore.case = T), "wt",
ifelse(grepl("tf2", m.genes25$sample, ignore.case = T), "tf2", "unknown"))
m.genes25$tissue <- ifelse(grepl("other", m.genes25$sample, ignore.case = T), "other",
ifelse(grepl("mbr", m.genes25$sample, ignore.case = T), "mbr", "unknown"))
#Set Region
m.genes25$region <- ifelse(grepl("a", m.genes25$sample, ignore.case = T), "A",
ifelse(grepl("c", m.genes25$sample, ignore.case = T), "C", "B"))
m.genes25$type <- paste(m.genes25$region, m.genes25$tissue,  sep = "")
head(m.genes25)
m.genes25.sub <- m.genes25[,c(1,7,4,3)]
head(m.genes25.sub)
#Change from long to wide data format
m.genes25.long <- cast(m.genes25.sub, genotype + gene ~ type, value.var = mean, fun.aggregate = "mean")
m.genes25.long <- as.data.frame(m.genes25.long)
m.genes25.long <- m.genes25.long[-c(870,1173,1437,1565,2247,4523),] #removing rows that caused NAs, see below for testing that was done.
wt <- subset(m.genes25.long, genotype == "wt")
tf2 <- subset(m.genes25.long, genotype == "tf2")
scale_data.wt <- as.matrix(t(scale(t(wt[c(3:8)]))))#transformation.
scale_data.tf2 <- as.matrix(t(scale(t(tf2[c(3:8)]))))#transformation.
scale_data <- rbind(scale_data.wt, scale_data.tf2)
setwd("~/Dropbox/Research/LCMProject/08SOM/lcmSOM_2/R")
setwd("~/")
setwd("~/Dropbox/Research/LCMProject/08SOM/lcmSOM_2/R")
genes25 <- read.csv("../data/normalized_analysis4.top25.csv")
genes25 <- read.csv("../data/output/analysis4.top25_19Oct2017.csv")
head(genes25)
genes25 <- genes25[,c(2:14)]
m.genes25 <- melt(genes25)
head(m.genes25)
names(m.genes25) <- c("gene", "sample", "mean")
m.genes25$genotype <- ifelse(grepl("wt", m.genes25$sample, ignore.case = T), "wt",
ifelse(grepl("tf2", m.genes25$sample, ignore.case = T), "tf2", "unknown"))
m.genes25$tissue <- ifelse(grepl("other", m.genes25$sample, ignore.case = T), "other",
ifelse(grepl("mbr", m.genes25$sample, ignore.case = T), "mbr", "unknown"))
#Set Region
m.genes25$region <- ifelse(grepl("a", m.genes25$sample, ignore.case = T), "A",
ifelse(grepl("c", m.genes25$sample, ignore.case = T), "C", "B"))
m.genes25$type <- paste(m.genes25$region, m.genes25$tissue,  sep = "")
head(m.genes25)
m.genes25.sub <- m.genes25[,c(1,7,4,3)]
head(m.genes25.sub)
#Change from long to wide data format
m.genes25.long <- cast(m.genes25.sub, genotype + gene ~ type, value.var = mean, fun.aggregate = "mean")
m.genes25.long <- as.data.frame(m.genes25.long)
wt <- subset(m.genes25.long, genotype == "wt")
tf2 <- subset(m.genes25.long, genotype == "tf2")
scale_data.wt <- as.matrix(t(scale(t(wt[c(3:8)]))))#transformation.
scale_data.tf2 <- as.matrix(t(scale(t(tf2[c(3:8)]))))#transformation.
scale_data <- rbind(scale_data.wt, scale_data.tf2)
pca <- prcomp(scale_data, scale=TRUE)
summary(pca)
pca.scores <- data.frame(pca$x)
data.val <- cbind(m.genes25.long, scale_data, pca.scores)
p <- ggplot(data.val, aes(PC1, PC2))
p + geom_point(alpha = 0.5)
set.seed(6)
names(data.val)
superSomData <- data.val[,c(1:8)]
tf2 <- subset(superSomData, genotype == "tf2", select = 1:8)
wt <- subset(superSomData, genotype == "wt", select = 1:8)
wtdiff <- setdiff(wt$gene, tf2$gene) #find which genes differ
head(wtdiff )
head(wtdiff)
wtdiff
head(tf2)
tf2 <- tf2[,3:8]
wt <- wt[,3:8]
wt <- as.matrix(wt)
tf2 <- as.matrix(tf2)
sc.wt <- t(scale(t(wt)))
sc.tf2 <- t(scale(t(tf2)))
dim(sc.tf2)
dim(sc.wt)
head(sc.tf2)
all.data <- list(sc.wt,sc.tf2)
head(all.data)
ssom <- supersom(all.data, somgrid(3, 2, "hexagonal"),weights=c(0.5,0.5))
dim(sc.wt)
dim(sc.tf2)
#### WTF???
?list()
setwd("~/Dropbox/Research/LCMProject/08SOM/lcmSOM_2/r")
library(ggplot2)
library(reshape)
library(plyr)
library(kohonen)
source("../r/clusterFunctions.R")
genes25 <- read.csv("../data/output/analysis4.top25_19Oct2017.csv")
genes25 <- genes25[,c(2:14)]
m.genes25 <- melt(genes25)
names(m.genes25) <- c("gene", "sample", "mean")
m.genes25$genotype <- ifelse(grepl("wt", m.genes25$sample, ignore.case = T), "wt",
ifelse(grepl("tf2", m.genes25$sample, ignore.case = T), "tf2", "unknown"))
m.genes25$tissue <- ifelse(grepl("other", m.genes25$sample, ignore.case = T), "other",
ifelse(grepl("mbr", m.genes25$sample, ignore.case = T), "mbr", "unknown"))
#Set Region
m.genes25$region <- ifelse(grepl("a", m.genes25$sample, ignore.case = T), "A",
ifelse(grepl("c", m.genes25$sample, ignore.case = T), "C", "B"))
m.genes25$type <- paste(m.genes25$region, m.genes25$tissue,  sep = "")
m.genes25.sub <- m.genes25[,c(1,7,4,3)]
#Change from long to wide data format
m.genes25.long <- cast(m.genes25.sub, genotype + gene ~ type, value.var = mean, fun.aggregate = "mean")
m.genes25.long <- as.data.frame(m.genes25.long)
# head(m.genes25.long)
wt <- subset(m.genes25.long, genotype == "wt")
tf2 <- subset(m.genes25.long, genotype == "tf2")
#transformation.
scale_data.wt <- as.matrix(t(scale(t(wt[c(3:8)]))))
scale_data.tf2 <- as.matrix(t(scale(t(tf2[c(3:8)]))))
scale_data_sep <- rbind(scale_data.tf2,scale_data.wt)
pca_sep <- prcomp(scale_data_sep)
summary(pca_sep)
pca.scores_sep <- data.frame(pca_sep$x)
data.val_sep <- cbind(m.genes25.long, scale_data_sep, pca.scores_sep)
p <- ggplot(data.val_sep, aes(PC1, PC2, color = genotype))
p + geom_point(alpha = 0.5)
#transformation
scale_data_tog <- as.matrix(t(scale(t(m.genes25.long[c(3:8)]))))
pca_tog <- prcomp(scale_data_tog)
summary(pca_tog)
pca.scores_tog <- data.frame(pca_tog$x)
data.val_tog <- cbind(m.genes25.long, scale_data_tog, pca.scores_tog)
p <- ggplot(data.val_tog, aes(PC1, PC2, color = genotype))
p + geom_point(alpha = 0.5)
p <- ggplot(data.val_sep, aes(PC1, PC2, color = genotype))
p + geom_point(alpha = 0.5)
## Using the the version where the values were scaled seperatley.
# head(data.val_sep)
data.val <- data.val_sep
set.seed(6)
names(data.val)
## Isolate only the scaled values as matrices
tf2 <- as.matrix(subset(data.val, genotype == "tf2", select = 9:14))
wt <- as.matrix(subset(data.val, genotype == "wt", select = 9:14))
# Make sure they are in proper order
all.data <- list(tf2, wt)
# head(all.data)
```
## Making the SOM map
ssom <- supersom(all.data, somgrid(6, 6, "hexagonal"))
summary(ssom)
#par(mfrow = c(3, 2))
plot(ssom, type = "changes")
plot(ssom, type = "codes")
plot(ssom, type = "counts")
plot(ssom, type = "quality")
data.val <- cbind(data.val,ssom$unit.classif,ssom$distances)
## Read in Data from previous section
plot.data <- read.table("../data/output/ssom.data.analysis5c_05Nov2017_large.txt", header = TRUE)
names(plot.data)
dim(plot.data)
## Princliple components colored by clusters
p <- ggplot(plot.data, aes(PC1, PC2, colour = factor(ssom.unit.classif)))
p + geom_point(alpha = .5) +
theme_bw() +
facet_grid(.~genotype)
clusterVis_line_ssom(37)
clusterVis_line_ssom(36)
data.val2 <- read.table("../data/output/ssom.data.analysis5c_05Nov2017_large.txt", header = TRUE)
clusterVis_line_ssom(36)
clusterVis_line_ssom(37)
clusterVis_line_ssom(36)
#Prereq annotation files for function
annotation1<- read.delim("../../../06diffGeneExp/analysis1_2014/DE/DE_analysis/beforeAnalysis/requisiteData/ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
colnames(annotation1) <- c("ITAG", "SGN_annotation")
annotation2<- read.delim ("../../../06diffGeneExp/analysis1_2014//DE/DE_analysis/beforeAnalysis/requisiteData/ITAG2.3_all_Arabidopsis_annotated.tsv")
annotation <- merge(annotation1,annotation2, by = "ITAG")
#Only Gene Name and ITAG
names(annotation)
annotation <- annotation[,c(1,4,5)]
#fix to one regex
annotation$ITAG <- gsub("^(.*)[.].*", "\\1", annotation$ITAG)
annotation$ITAG <- gsub("^(.*)[.].*", "\\1", annotation$ITAG)
data.val3 <- data.val2
colnames(data.val3)[2] <- "ITAG"
everything <- merge(data.val3, annotation, by = "ITAG", all.x = TRUE)
write.csv(everything, file = "../data/output/ssom.data.analysis5c_36_29March2018_geneList.csv")

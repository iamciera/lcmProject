my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
write.table(t, file="tf2cmbr_wtcmbr_DE1_sigonly_ALL_GOmerge.txt")
genes = as.integer(pat$up)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
enriched.GO
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
```
write.table(t, file="tf2cmbr_wtcmbr_DE1_sigonly_up_GOmerge.txt")
genes = as.integer(pat$down)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
enriched.GO
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
```
write.table(t, file="tf2cmbr_wtcmbr_DE1_sigonly_down_GOmerge.txt")
sigOnly <- read.csv("wtambr_wtaother_DE.csv")
head(sigOnly)
sigOnly <- read.csv("wtambr_wtaother_DE.csv")
setwd("~/Dropbox/GO_enrichment/wtambr_wtaother")
sigOnly <- read.csv("wtambr_wtaother_DE.csv")
sigOnly <- read.csv("wtambr_wtaother_DE.csv")
setwd("~/Dropbox/GO_enrichment/wtambr_wtaother")
sigOnly <- read.csv("wtambr_aother_DE.csv")
head(sigOnly)
dim(sigOnly)
colnames(sigOnly)
colnames(sigOnly)[1] <- "itag"
upITAG <- subset(sigOnly, logFC > 0, select = c(itag))
upITAG$up <- 1
downITAG <- subset(sigOnly, logFC < 0, select = c(itag))
downITAG$down <- 1
allITAG <- subset(sigOnly, select = c(itag))
allITAG$all <- 1
geneLength <- read.csv("../normalized_genes_length.csv")
head(geneLength)
#isolate just the gene list
genes <- subset(geneLength, select = c(itag))
upITAGmerge <- merge(genes, upITAG, by = "itag", all= TRUE)
dim(upITAGmerge)
downITAGmerge <- merge(genes, downITAG, by = "itag", all= TRUE)
dim(downITAGmerge)
allITAGmerge <- merge(genes, allITAG, by = "itag", all= TRUE)
dim(allITAGmerge)
dim(downITAGmerge)
allITAGmerge <- merge(genes, allITAG, by = "itag", all= TRUE)
dim(allITAGmerge)
head(allITAGmerge)
matrixGOupdown <- merge(upITAGmerge, downITAGmerge, by = "itag", all = TRUE)
head(matrixGOupdown)
matrixGOupdownall <- merge(matrixGOupdown, allITAG, by = "itag", all = TRUE)
head(matrixGOupdownall)
matrixGO <- merge(matrixGOupdownall, geneLength, by = "itag", all = TRUE)
head(matrixGO)
matrixGO[is.na(matrixGO)] <- 0
head(matrixGO)
pat <- matrixGO#read.table("mydata.txt",header=TRUE)
head(pat)
cate <- read.table("../melted.GOTable.txt",header=TRUE)
head(cate)
genes = as.integer(pat$up)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
enriched.GO
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
```
write.table(t, file="DE1_wtambr_wtaother_sigonly_up_GOmerge.txt") #change this
genes = as.integer(pat$down)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
enriched.GO
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
```
write.table(t, file="DE1_wtambr_wtaother_sigonly_down_GOmerge.txt") #change this
genes = as.integer(pat$all)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
enriched.GO
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
```
write.table(t, file="DE1_wtambr_wtaother_sigonly_all_GOmerge.txt") #change this
setwd("~/Dropbox/GO_enrichment/wtambr_wtbmbr")
sigOnly <- read.csv("wtambr_wtbmbr_DE1.csv") #change this
sigOnly <- read.csv("wtambr_wtbmbr_DE.csv") #change this
head(sigOnly)
dim(sigOnly)
colnames(sigOnly)[1] <- "itag"
colnames(sigOnly)
upITAG <- subset(sigOnly, logFC > 0, select = c(itag))
upITAG$up <- 1
downITAG <- subset(sigOnly, logFC < 0, select = c(itag))
downITAG$down <- 1
allITAG <- subset(sigOnly, select = c(itag))
allITAG$all <- 1
geneLength <- read.csv("../normalized_genes_length.csv")
head(geneLength)
#isolate just the gene list
genes <- subset(geneLength, select = c(itag))
upITAGmerge <- merge(genes, upITAG, by = "itag", all= TRUE)
dim(upITAGmerge)
downITAGmerge <- merge(genes, downITAG, by = "itag", all= TRUE)
dim(downITAGmerge)
allITAGmerge <- merge(genes, allITAG, by = "itag", all= TRUE)
dim(allITAGmerge)
head(allITAGmerge)
upITAGmerge <- merge(genes, upITAG, by = "itag", all= TRUE)
dim(upITAGmerge)
downITAGmerge <- merge(genes, downITAG, by = "itag", all= TRUE)
dim(downITAGmerge)
allITAGmerge <- merge(genes, allITAG, by = "itag", all= TRUE)
dim(allITAGmerge)
head(allITAGmerge)
upITAGmerge <- merge(genes, upITAG, by = "itag", all= TRUE)
dim(upITAGmerge)
downITAGmerge <- merge(genes, downITAG, by = "itag", all= TRUE)
dim(downITAGmerge)
allITAGmerge <- merge(genes, allITAG, by = "itag", all= TRUE)
dim(allITAGmerge)
head(allITAGmerge)
upITAGmerge <- merge(genes, upITAG, by = "itag", all= TRUE)
dim(upITAGmerge)
downITAGmerge <- merge(genes, downITAG, by = "itag", all= TRUE)
dim(downITAGmerge)
allITAGmerge <- merge(genes, allITAG, by = "itag", all= TRUE)
dim(allITAGmerge)
head(allITAGmerge)
upITAGmerge <- merge(genes, upITAG, by = "itag", all= TRUE)
dim(upITAGmerge)
downITAGmerge <- merge(genes, downITAG, by = "itag", all= TRUE)
dim(downITAGmerge)
allITAGmerge <- merge(genes, allITAG, by = "itag", all= TRUE)
dim(allITAGmerge)
head(allITAGmerge)
matrixGOupdown <- merge(upITAGmerge, downITAGmerge, by = "itag", all = TRUE)
head(matrixGOupdown)
matrixGOupdownall <- merge(matrixGOupdown, allITAG, by = "itag", all = TRUE)
head(matrixGOupdownall)
matrixGO <- merge(matrixGOupdownall, geneLength, by = "itag", all = TRUE)
head(matrixGO)
matrixGO[is.na(matrixGO)] <- 0
head(matrixGO)
pat <- matrixGO
head(pat)
cate <- read.table("../melted.GOTable.txt",header=TRUE)
head(cate)
genes = as.integer(pat$all)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
write.table(t, file="DE1_wtambr_wtbmbr_sigonly_all_GOmerge.txt") #change this
genes = as.integer(pat$up)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
```
write.table(t, file="DE1_wtambr_wtbmbr_sigonly_up_GOmerge.txt") #change this
genes = as.integer(pat$down)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
```
write.table(t, file="DE1_wtambr_wtbmbr_sigonly_down_GOmerge.txt") #change this
sigOnly <- read.csv("wtambr_wtcmbr_DE.csv") #change this
setwd("~/Dropbox/GO_enrichment/wtambr_wtcmbr")
sigOnly <- read.csv("wtambr_wtcmbr_DE.csv") #change this
head(sigOnly)
dim(sigOnly)
colnames(sigOnly)[1] <- "itag"
colnames(sigOnly)
upITAG <- subset(sigOnly, logFC > 0, select = c(itag))
upITAG$up <- 1
downITAG <- subset(sigOnly, logFC < 0, select = c(itag))
downITAG$down <- 1
allITAG <- subset(sigOnly, select = c(itag))
allITAG$all <- 1
geneLength <- read.csv("../normalized_genes_length.csv")
head(geneLength)
#isolate just the gene list
genes <- subset(geneLength, select = c(itag))
upITAGmerge <- merge(genes, upITAG, by = "itag", all= TRUE)
dim(upITAGmerge)
downITAGmerge <- merge(genes, downITAG, by = "itag", all= TRUE)
dim(downITAGmerge)
allITAGmerge <- merge(genes, allITAG, by = "itag", all= TRUE)
dim(allITAGmerge)
head(allITAGmerge)
matrixGOupdown <- merge(upITAGmerge, downITAGmerge, by = "itag", all = TRUE)
head(matrixGOupdown)
matrixGOupdownall <- merge(matrixGOupdown, allITAG, by = "itag", all = TRUE)
head(matrixGOupdownall)
matrixGO <- merge(matrixGOupdownall, geneLength, by = "itag", all = TRUE)
head(matrixGO)
matrixGO[is.na(matrixGO)] <- 0
head(matrixGO)
pat <- matrixGO
head(pat)
cate <- read.table("../melted.GOTable.txt",header=TRUE)
head(cate)
genes = as.integer(pat$down)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
write.table(t, file="DE1_sigonly_wtambr_wtcmbr_down_GOmerge.txt") #change this
genes = as.integer(pat$up)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
```
write.table(t, file="DE1_sigonly_wtambr_wtcmbr_up_GOmerge.txt") #change this
genes = as.integer(pat$all)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
```
write.table(t, file="DE1_sigonly_wtambr_wtcmbr_all_GOmerge.txt") #change this
sigOnly <- read.csv("wtaother_wtbother_DE.csv") #change this
setwd("~/Dropbox/GO_enrichment/wtaother_wtbother")
sigOnly <- read.csv("wtaother_wtbother_DE.csv") #change this
upITAG <- subset(sigOnly, logFC > 0, select = c(itag))
upITAG$up <- 1
downITAG <- subset(sigOnly, logFC < 0, select = c(itag))
downITAG$down <- 1
allITAG <- subset(sigOnly, select = c(itag))
allITAG$all <- 1
sigOnly <- read.csv("wtaother_wtbother_DE.csv") #change this
head(sigOnly)
dim(sigOnly)
colnames(sigOnly)[1] <- "itag"
colnames(sigOnly)
upITAG <- subset(sigOnly, logFC > 0, select = c(itag))
upITAG$up <- 1
downITAG <- subset(sigOnly, logFC < 0, select = c(itag))
downITAG$down <- 1
allITAG <- subset(sigOnly, select = c(itag))
allITAG$all <- 1
geneLength <- read.csv("../normalized_genes_length.csv")
head(geneLength)
#isolate just the gene list
genes <- subset(geneLength, select = c(itag))
upITAGmerge <- merge(genes, upITAG, by = "itag", all= TRUE)
dim(upITAGmerge)
downITAGmerge <- merge(genes, downITAG, by = "itag", all= TRUE)
dim(downITAGmerge)
allITAGmerge <- merge(genes, allITAG, by = "itag", all= TRUE)
dim(allITAGmerge)
head(allITAGmerge)
matrixGOupdown <- merge(upITAGmerge, downITAGmerge, by = "itag", all = TRUE)
head(matrixGOupdown)
matrixGOupdownall <- merge(matrixGOupdown, allITAG, by = "itag", all = TRUE)
head(matrixGOupdownall)
matrixGO <- merge(matrixGOupdownall, geneLength, by = "itag", all = TRUE)
head(matrixGO)
matrixGO[is.na(matrixGO)] <- 0
head(matrixGO)
pat <- matrixGO
head(pat)
cate <- read.table("../melted.GOTable.txt",header=TRUE)
head(cate)
genes = as.integer(pat$all)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
write.table(t, file="DE1_sigonly_wtaother_wtbother_all_GOmerge.txt") #change this
genes = as.integer(pat$up)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
```
write.table(t, file="DE1_sigonly_wtaother_wtbother_up_GOmerge.txt") #change this
genes = as.integer(pat$down)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
```
write.table(t, file="DE1_sigonly_wtaother_wtbother_down_GOmerge.txt") #change this
setwd("~/Dropbox/GO_enrichment/wtaother_wtcother")
sigOnly <- read.csv("wtaother_wtcother_DE.csv") #change this
head(sigOnly)
dim(sigOnly)
colnames(sigOnly)[1] <- "itag"
colnames(sigOnly)
```
###Subset
First I need to subset the list to up or down regulated, then add a new colum that specififys 1.  This column is need to for merging.
```{r}
upITAG <- subset(sigOnly, logFC > 0, select = c(itag))
upITAG$up <- 1
downITAG <- subset(sigOnly, logFC < 0, select = c(itag))
downITAG$down <- 1
allITAG <- subset(sigOnly, select = c(itag))
allITAG$all <- 1
```
###Merge I - with normalized ITAG length gene list
read in guide.
```{r}
geneLength <- read.csv("../normalized_genes_length.csv")
head(geneLength)
#isolate just the gene list
genes <- subset(geneLength, select = c(itag))
```
First merge each table to geneLength
```{r}
upITAGmerge <- merge(genes, upITAG, by = "itag", all= TRUE)
dim(upITAGmerge)
downITAGmerge <- merge(genes, downITAG, by = "itag", all= TRUE)
dim(downITAGmerge)
allITAGmerge <- merge(genes, allITAG, by = "itag", all= TRUE)
dim(allITAGmerge)
head(allITAGmerge)
```
###Merge II - Merge them all together.
```{r}
matrixGOupdown <- merge(upITAGmerge, downITAGmerge, by = "itag", all = TRUE)
head(matrixGOupdown)
matrixGOupdownall <- merge(matrixGOupdown, allITAG, by = "itag", all = TRUE)
head(matrixGOupdownall)
matrixGO <- merge(matrixGOupdownall, geneLength, by = "itag", all = TRUE)
head(matrixGO)
```
###Clean Up
```{r}
matrixGO[is.na(matrixGO)] <- 0
head(matrixGO)
```
This is if you want to write out the table.
write.table(matrixGO, "mydata.txt", sep="\t", quote= FALSE)
Aashish's section
-----------------
The is the input of the GOslim categories.  There are only two columns 1. itag and 2. go
```{r}
pat <- matrixGO
head(pat)
cate <- read.table("../melted.GOTable.txt",header=TRUE)
head(cate)
```
###Subseting for GO analysis
Specify the column you are interested in `pat$all` refers to all the DE gene regardless if they are up or down regulated. If you want to specify down regulated, specify `pat$down`.
```{r}
genes = as.integer(pat$down)
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes,bias.data=pat$length)
GO.wall = goseq(pwf,gene2cat = cate)
head(GO.wall)
```
Here is where you can specify the p-value cut-off
```{r}
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
q
dffgd
>
sf
quit
35rtegr
weqr3
1`12\
wuit
---
sdfadmmm
>sdf

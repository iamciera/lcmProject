### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
sigType <- c("up", "down", "all")
for (type in sigType) {
genes = as.integer(pat[,type])
names(genes) = pat$itag
table(genes)
length(genes)
pwf = nullp(genes, bias.data = pat$length)
GO.wall = goseq(pwf, gene2cat = cate)
head(GO.wall)
#This is going to correct for multiple testing.  You can specify the p-value cut-off of GO categories you are interested.
enriched.GO = GO.wall$category[p.adjust(GO.wall$over_represented_pvalue, method = "BH") < 0.05]
enriched.GO
my.GO <- as.character(enriched.GO)
my.GO.table <- Term(my.GO)
my.GO.table
t <- as.matrix(my.GO.table)
print(type) #this is for the knitr document
print(t) #this is for the knitr document
write.table(t, file = paste(sample1,"_",sample2,"DE1_sigonly_",type,"_GO.txt", sep = ""))
write.table(GO.wall, file = paste(sample1,"_",sample2,"DE1_sigValues_",type,"_GO.txt", sep = ""))
}
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
## Libraries
library(tidyr)
library(goseq)
library(GO.db)
library(yaml)
library(rmarkdown)
## Read in YAML guide
### Set Working Directory
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Read in sample names from yaml
yamls <- yaml.load_file("de.yml")
sample1 <- yamls$sample1
sample2 <- yamls$sample2
sample1
sample2
## Render
render("GO_basedOnSkeletonGO.Rmd", "pdf_document", output_file = paste(sample1,"_",sample2,"_","GO.pdf",sep = ""))
ggplot() +
coord_polar(theta="x")+facet_wrap(~l) +
scale_x_continuous(name="hue", limits=c(0,360), breaks=seq(5,345,20), labels=seq(0,340,20)) +
scale_y_continuous(name="chroma", breaks=seq(0, 100, 20)) +
scale_fill_identity() +
geom_rect(data=d, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=c, ymax=c+resolution(c), fill=hcl(h,c,l)), color="white", size=0.1)
d=expand.grid(h=seq(0,350,10), c=seq(0,100,5), l=seq(0,100,20))
ggplot() +
coord_polar(theta="x")+facet_wrap(~l) +
scale_x_continuous(name="hue", limits=c(0,360), breaks=seq(5,345,20), labels=seq(0,340,20)) +
scale_y_continuous(name="chroma", breaks=seq(0, 100, 20)) +
scale_fill_identity() +
geom_rect(data=d, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=c, ymax=c+resolution(c), fill=hcl(h,c,l)), color="white", size=0.1)
d

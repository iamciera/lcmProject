axis.title.y = element_text(face = "bold", size = 30),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, vjust = 1, face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 30),
axis.title.x = element_text(face = "bold", size = 30),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, vjust = 1, face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 30),
axis.title.x = element_text(face = "bold", size = 30),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding protein", y = "normalizaed read count")
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, vjust = 1, face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 25),
axis.title.x = element_text(face = "bold", size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding protein", y = "normalizaed read count")
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, vjust = 1, face = "bold", size = 12),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding protein", y = "normalizaed read count")
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, vjust = 1, face = "bold", size = 12),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding protein", y = "normalizaed read count")
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, vjust = 1, face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 25),
axis.title.x = element_text(face = "bold", size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding protein", y = "normalizaed read count")
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, vjust = 1, face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 25),
axis.title.x = element_text(face = "bold", size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding protein", y = "normalizaed read count") +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, vjust = 1, face = "bold", size = 12),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding protein", y = "normalizaed read count") +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, vjust = 1, face = "bold", size = 12),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding gene", y = "normalizaed read count") +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, vjust = 1, face = "bold", size = 12),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding (CAB)", y = "normalizaed read count") +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 60, vjust = 1, face = "bold", size = 12),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding (CAB)", y = "normalizaed read count") +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
ggplot(allCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 90, hjust = 1, face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 30),
axis.text.y  = element_text(size = 16),
legend.title = element_text(size = 30),
strip.text.x = element_text(size = 20)) +
facet_grid(region~genotype) +
scale_fill_manual(values = lcmPalette)
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 60, hjust = 1, face = "bold", size = 12),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding (CAB)", y = "normalizaed read count") +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 60, hjust = 1, face = "bold", size = 19),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "Chlorophyll a-b binding (CAB)", y = "normalizaed read count") +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
allCABs_sig_pairwise[,c(1:5, 15) ]
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 60, hjust = 1, face = "bold", size = 19),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "", y = "normalizaed read count") +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 60, hjust = 1, face = "bold", size = 19),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 40),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "", y = "normalizaed read count") +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
Chlorophyll a-b binding (CAB)
ggplot(wtallCABs, aes(gene, count, fill = sample2)) +
geom_boxplot() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(angle = 60, hjust = 1, face = "bold", size = 30),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.text.y  = element_text(size = 16),
legend.position = "none",
strip.text.x = element_text(size = 20)) +
labs(x = "", y = "normalizaed read count") +
scale_fill_manual(values = lcmPalette) +
facet_grid(.~region_f)
library(ggplot2)
library(plyr)
data(ChickWeight)
##
ggplot(data=ChickWeight, aes(x=Time, y=weight, color=Diet)) +
geom_jitter()
##
ggplot(data=ChickWeight, aes(x=Time, y=weight, color=Diet)) +
geom_line()
help.search("^geom_", package = "ggplot2")
ggplot(data=ChickWeight, aes(x=Time, y=weight, color=Diet)) +
geom_point(aes(color=NULL), shape=1) + geom_smooth()
##
ggplot(data=ChickWeight, aes(x=Time, y=weight, color=Diet)) +
geom_jitter()
setwd("~/Dropbox/Research/LCMProject/19LCM_datasets/lcmProject_v2/CAB_visualization/R")
# Read in normalized read counts from new mapping done previously.
countData <- read.csv("../../datasets/01_normalizedReadCount.csv"")
# Read in normalized read counts from new mapping done previously.
countData <- read.csv("../../datasets/01_normalizedReadCount.csv)
# Read in normalized read counts from new mapping done previously.
countData <- read.csv("../../datasets/01_normalizedReadCount.csv")
head(countData)
colnames(countData)
countData <- countData[,-1]
head(countData)
#Melt Data
countData <- melt(countData)
head(countData)
colnames(countData) <- c("gene", "sample", "count")
head(countData)
# Read in normalized read counts from new mapping done previously.
countData <- read.csv("../../06diffGeneExp/analysis3_19July2017/data/output/normalizedReadCount19July2017.csv")
# Read in normalized read counts from new mapping done previously.
countData <- read.csv("../../../../06diffGeneExp/analysis3_19July2017/data/output/normalizedReadCount19July2017.csv")
head(countData)
colnames(countData)
countData <- countData[,-1]
head(countData)
#Melt Data
countData <- melt(countData)
head(countData)
colnames(countData) <- c("gene", "sample", "count")
head(countData)
#set genotype
countData$genotype <- ifelse(grepl("wt", countData$sample, ignore.case = T), "wt",
ifelse(grepl("tf2", countData$sample, ignore.case = T), "tf-2", "unknown"))
# Read in normalized read counts from new mapping done previously.
countData <- read.csv("../../../..06diffGeneExp/analysis3_19July2017/data/output/normalizedReadCount19July2017.csv")
head(countData)
# Read in normalized read counts from new mapping done previously.
countData <- read.csv("../../../..06diffGeneExp/analysis3_19July2017/data/output/normalizedReadCount19July2017.csv")
# Read in normalized read counts from new mapping done previously.
countData <- read.csv("../../DE_and_GO/analysis3_modelled/data/output/01_normalizedReadCount19July2017.csv")
head(countData)
colnames(countData)
countData <- countData[,-1]
head(countData)
#Melt Data
countData <- melt(countData)
library(dplyr)
#Melt Data
countData <- melt(countData)
library(rmarkdown)
library(reshape2)
library(ggplot2)
library(plyr)
library(RColorBrewer)
#Melt Data
countData <- melt(countData)
head(countData)
setwd("~/Dropbox/Research/LCMProject/19LCM_datasets/lcmProject_v2/figure_3b_MDS")
setwd("~/Dropbox/Research/LCMProject/19LCM_datasets/lcmProject_v2/figure_3b_MDS")
counts <- read.delim("./sam2countsResults.tsv",row.names=1)
#Look at boxplot of log2
normexplog <- log(counts,2)
boxplot(normexplog)
boxplot(counts)
counts
counts <- read.delim("./sam2countsResults.tsv",row.names=1)
boxplot(counts)
head(counts)
counts <- read.delim("../../data/sam2countsResults.tsv")
counts <- read.delim("./sam2countsResults_lane123.tsv")
colnames(counts)
counts <- counts[,-c(3,9,42)]
#check the file
head(counts)
colnames(counts)
#need to convert NA to 0 counts
counts[is.na(counts)] <- 0
head(counts)
colnames(counts)
sample <- gsub("[0-9]", "", names(counts))
sample <- gsub("\\.", "", sample)
sample <- sample[-1]
sample
#set genotype
designTable <- as.data.frame(sample)
designTable$genotype <- ifelse(grepl("wt", designTable$sample, ignore.case = T), "wt", ifelse(grepl("tf", designTable$sample, ignore.case = T), "tf2", "unknown"))
designTable$tissue <- ifelse(grepl("other", designTable$sample, ignore.case = T), "rachis", ifelse(grepl("mbr", designTable$sample, ignore.case = T), "mbr", "unknown"))
#Set Region
designTable$region <- ifelse(grepl("a", designTable$sample, ignore.case = T), "A", ifelse(grepl("c", designTable$sample, ignore.case = T), "C", "B"))
designTable
genotype <- designTable$genotype
sample <- designTable$sample
tissue <- designTable$region
region <- designTable$r
y <- DGEList(counts=counts[,2:46], genes=counts[,1], group = sample)
library(edgeR)
y <- DGEList(counts=counts[,2:46], genes=counts[,1], group = sample)
head(y)
cpm.y <- cpm(y) #counts per million
y <- y[rowSums(cpm.y > 5) >= 3,] # get rid of genes with low counts
y <- estimateCommonDisp(y,verbose=T) #Estimates common negative binomial dispersion by conditional maximum liklihood
y <- estimateCommonDisp(y,verbose=T) #Estimates common negative binomial dispersion by conditional maximum liklihood
y <- calcNormFactors(y)
y <- estimateCommonDisp(y, verbose = T) #Disp = 0.46228 , BCV = 0.6799
y$samples
plotMDS(cpm(y, log=TRUE), column=1) #Disp = 0.44804 , BCV = 0.6694
plotMDS(cpm(y, log=TRUE), column=1) #Disp = 0.44804 , BCV = 0.6694
library(edgeR)
customTheme <- list(theme(axis.title.x = element_text(face="bold", size=30),
axis.title.y = element_text(face="bold", size=30),
axis.text.x  = element_text(size=16),
axis.text.y  = element_text(size=16),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
strip.text.x = element_text(size = 20),
strip.text.y = element_text(size = 20)) )
counts <- read.delim("./sam2countsResults_lane123.tsv",row.names=1)
head(counts)
boxplot(counts)
#Look at boxplot of log2
normexplog <- log(counts,2)
boxplot(normexplog)
#check the file
head(counts)
colname(counts)
summary(counts)
counts <- subset(counts, select=-c(wtbother1.4, tf2ambr3, wtcmbr1.4.6, tf2aother7, wtaother5))
counts[is.na(counts)] <- 0
colnames(counts)
group <- c(
rep("tf2ambr", 3),
rep("tf2aother", 3),
rep("tf2bmbr", 3),
rep("tf2bother", 4),
rep("tf2cmbr", 4),
rep("tf2cother", 4),
rep("wtambr", 3),
rep("wtaother", 4),
rep("wtbmbr", 4),
rep("wtbother", 3),
rep("wtcmbr", 5),
rep("wtcother", 3)
)
d <- DGEList(counts=counts, group=group)
counts <- subset(counts, select=-c(wtbother1.4, tf2ambr3, wtcmbr1.4.6, tf2aother7, wtaother5))
summary(counts)
colname(counts)
colnames(counts)
counts <- subset(counts, select=-c(wtbother1.4, tf2ambr3, wtcmbr1.4.6, tf2aother7, wtaother5))
counts
counts <- read.delim("./sam2countsResults_lane123.tsv",row.names=1)
head(counts)
boxplot(counts)
#Look at boxplot of log2
normexplog <- log(counts,2)
boxplot(normexplog)
#check the file
head(counts)
colnames(counts)
summary(counts)
gsub(".sam", "", colnames(counts))
colnames(counts) <- gsub(".sam", "", colnames(counts))
counts <- subset(counts, select=-c(wtbother1.4, tf2ambr3, wtcmbr1.4.6, tf2aother7, wtaother5))
counts[is.na(counts)] <- 0
colnames(counts)
group <- c(
rep("tf2ambr", 3),
rep("tf2aother", 3),
rep("tf2bmbr", 3),
rep("tf2bother", 4),
rep("tf2cmbr", 4),
rep("tf2cother", 4),
rep("wtambr", 3),
rep("wtaother", 4),
rep("wtbmbr", 4),
rep("wtbother", 3),
rep("wtcmbr", 5),
rep("wtcother", 3)
)
d <- DGEList(counts=counts, group=group)
head(d$counts)
d$samples
#Filter to exclude genes that have <2 counts in (N Rep)-1
cpm.d<- cpm(d)
d <- d[rowSums(cpm.d>1)>=3,]
#normalize library
d <- calcNormFactors(d)
d$pseudo<- equalizeLibSizes(d)
data.norm <- d$pseudo$pseudo
#write.csv (d$pseudo$pseudo,"normalized_read_count.csv") #to make normalized read count library
dim(data.norm)
library(ggplot2)
m <- cmdscale(dist(scale(t(data.norm))))
m <- cmdscale(dist(scale(t(data.norm))))
colnames(m) <- c("x", "y")
data.norm
#write.csv (d$pseudo$pseudo,"normalized_read_count.csv") #to make normalized read count library
dim(data.norm)
head(d$counts)
d$samples
#Filter to exclude genes that have <2 counts in (N Rep)-1
cpm.d<- cpm(d)
d <- d[rowSums(cpm.d>1)>=3,]
#normalize library
d <- calcNormFactors(d)
d$pseudo<- equalizeLibSizes(d)
data.norm <- d$pseudo$pseudo
#write.csv (d$pseudo$pseudo,"normalized_read_count.csv") #to make normalized read count library
dim(data.norm)
m <- cmdscale(dist(scale(t(data.norm))))
m <- as.matrix(cmdscale(dist(scale(t(data.norm)))))
head(data.norm)
View(data.norm)
d$pseudo$pseudo
data.norm <- d$pseudo$pseudo.counts
#write.csv (d$pseudo$pseudo,"normalized_read_count.csv") #to make normalized read count library
dim(data.norm)
library(ggplot2)
m <- cmdscale(dist(scale(t(data.norm))))
colnames(m) <- c("x", "y")
m<-as.data.frame(m)
m$sampleSection <- c(
rep("tf2ambr", 3),
rep("tf2aother", 3),
rep("tf2bmbr", 3),
rep("tf2bother", 4),
rep("tf2cmbr", 4),
rep("tf2cother", 4),
rep("wtambr", 3),
rep("wtaother", 4),
rep("wtbmbr", 4),
rep("wtbother", 3),
rep("wtcmbr", 5),
rep("wtcother", 3)
)
m$genotype <- c(
rep("tf2", 21),
rep("wt", 22)
)
m$type <- c(
rep("mbr", 3),
rep("rachis", 3),
rep("mbr", 3),
rep("rachis", 4),
rep("mbr", 4),
rep("rachis", 4),
rep("mbr", 3),
rep("rachis", 4),
rep("mbr", 4),
rep("rachis", 3),
rep("mbr", 5),
rep("rachis", 3)
)
m$genotype <- factor(m$genotype, levels=c('wt','tf2'))
colnames(m)[5] <- "tissue"
ggplot(m, aes(x,y,colour=sampleSection))+geom_point(size=5)+theme_bw()
ggplot(m, aes(x,y,colour=sampleSection))+geom_point(size=5)+theme_bw() + facet_grid(.~ genotype)
ggplot(m, aes(x,y,colour=genotype))+geom_point(size=5)+theme_bw()
ggplot(m, aes(x,y,colour=tissue, label=sampleSection))+geom_point(size=1)+theme_bw() + geom_text()
ggplot(m, aes(x,y,colour=tissue, label=sampleSection))+geom_point(size=1)+theme_bw() + geom_text() + facet_grid(. ~ genotype) +
theme_bw() +
customTheme +
scale_color_manual(values = c("grey","dodgerblue2"))
head(m)
sample <- rownames(m)
m$sample <- sample
ggplot(m, aes(x,y,colour=tissue, label=sample, color = sampleSection))  +
geom_point(size=1) +
theme_bw() +
geom_text() +
geom_density2d() +
scale_color_manual(values = c("grey","dodgerblue2")) +
facet_grid(. ~ genotype)
ggplot(m, aes(x,y,colour=tissue, color = sampleSection))  +
geom_point(size=2) +
geom_density2d(bins = 7) +
facet_grid(. ~ genotype) +
theme_bw() +
customTheme +
scale_color_manual(values = c("grey","dodgerblue2"))

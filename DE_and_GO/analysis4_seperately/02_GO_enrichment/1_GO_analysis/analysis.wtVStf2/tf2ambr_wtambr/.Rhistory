head(annotation)
head(results)
head(results$table)
results.annotated <- merge(results$table,annotation,by.x="row.names",by.y="ITAG",all.x=T,sort=F)
head(results.annotated)
head(results$table)
results.annotated <- merge(results$table,annotation,by.x="Row.names",by.y="ITAG",all.x=T,sort=F)
head(annotation)
head(results$table)
head(annotation)
head(results$table)
results.annotated <- merge(results$table,annotation,by=1,1,all.x=T,sort=F)
head(results.annotated)
head(results$table)
head(results$table)
colnames(results$table)[1] <- c("ITAG")
head(results$table)
results.annotated <- merge(results$table,annotation,by.x="row.names",by.y="ITAG",all.x=T,sort=F)
head(results$table)
results.annotated <- merge(results$table,annotation,by.x="row.names",by.y="ITAG",all.x=T,sort=F)
head(results.sig)
results.annotated <- merge(results.sig$table,annotation,by.x="row.names",by.y="ITAG",all.x=T,sort=F)
results.annotated
head(results.sig)
results.annotated <- merge(results.sig,annotation,by.x="row.names",by.y="ITAG",all.x=T,sort=F)
head(results.annotated)
colnames(results.sig)[1] <- c("ITAG")
head(results.sig)
results.sig <- subset(tt$table, tt$table$FDR < 0.05)
head(annotation)
head(annotation)
annotation <- merge (annotation1,annotation2, by =1,1, all.x=TRUE)
head(annotation)
head(results.sig)
results.annotated <- merge(results.sig,annotation,by.x="row.names",by.y="ITAG",all.x=T,sort=F)
head(results.annotated)
colnames(annotation1)<- c("ITAG", "SGN_annotation")
head(annotation1)
annotation1<- read.delim("../ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
head(annotation1)
colname(annotation1)
colnames(annotation1)
colnames(annotation1)
annotation1<- read.delim("../ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
colnames(annotation1)
colnames(annotation1) <- c("ITAG", "SGN_annotation")
head(annotation1)
annotation2<- read.delim ("../ITAG2.3_all_Arabidopsis_annotated.tsv")
head(annotation2)
colnames(annotation2)
annotation <- merge(annotation1,annotation2, by = ITAG)
annotation <- merge(annotation1,annotation2, by = "ITAG")
head(annotation)
colnames(annotation)
colnames(results.sig)
colnames(results.sig$table)
results.sig$table
head(results.sig)
head(results.sig)
dim(results.sig)
head(results.sig)
colnames(results.sig)[0] <- c("ITAG")
head(results.sig)
results.sig$ITAG <- rownames(results.sig)
head(results.si)
head(results.sig)
results.annotated <- merge(results.sig,annotation,by = "ITAG")
head(results.annotated)
write.table(results.annotated,"wtbmbr_wtcmbr_DE_all.csv",sep="\t",row.names=F)
write.table(results.annotated,"wtbmbr_wtcmbr_DE_alltest.csv",sep="\t",row.names=F)
write.table(results.annotated,"wtbmbr_wtcmbr_DE_alltest.csv",row.names=F)
write.table(results.annotated,"wtbmbr_wtcmbr_DE_alltest.txt",sep="\t",row.names=F)
write.csv(results.annotated,"wtbmbr_wtcmbr_DE_alltest.txt",row.names=F)
write.csv(results.annotated,"wtbmbr_wtcmbr_DE_alltest.txt")
write.csv(results.annotated,"wtbmbr_wtcmbr_DE_alltest.txt", row.names = 1)
write.csv(results.annotated, file ="wtbmbr_wtcmbr_DE_alltest.txt")
write.csv(results.annotated,"wtbmbr_wtcmbr_DE_alltest.txt",row.names=F)
write.csv(results.annotated,"wtbmbr_wtcmbr_DE_alltest.txt",sep="\t",row.names=F)
write.csv(results.annotated,"wtbmbr_wtcmbr_DE_alltest.txt",sep="\t",row.names=F)
write.csv(results.annotated,"wtbmbr_wtcmbr_DE_alltest.tsv",sep="\t",row.names=F)
write.table(results.annotated,"wtbmbr_wtcmbr_DE_alltest.txt",sep="\t",row.names=F)
annotation1<- read.delim("../ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
colnames(annotation1) <- c("ITAG", "SGN_annotation")
annotation2<- read.delim ("../ITAG2.3_all_Arabidopsis_annotated.tsv")
annotation <- merge(annotation1,annotation2, by = "ITAG")
results.sig$ITAG <- rownames(results.sig)
results.annotated <- merge(results.sig,annotation,by = "ITAG")
head(results.annotated)
results.annotated <- merge(results$table,annotation,by = "ITAG")
results.annotated <- merge(results.sig,annotation,by = "ITAG")
results.annotated <- merge(results$table, annotation,by = "ITAG")
head(results.annotated)
annotation1<- read.delim("../ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
colnames(annotation1) <- c("ITAG", "SGN_annotation")
annotation2<- read.delim ("../ITAG2.3_all_Arabidopsis_annotated.tsv")
annotation <- merge(annotation1,annotation2, by = "ITAG")
write.table(results.all.annotated,"wtbmbr_wtcmbr_DE_all.txt",sep="\t",row.names=F)
write.table(results.sig.annotated,"wtcmbr_wtcother_DE.csv",sep="\t",row.names=F)
annotation1<- read.delim("../ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
colnames(annotation1) <- c("ITAG", "SGN_annotation")
annotation2<- read.delim ("../ITAG2.3_all_Arabidopsis_annotated.tsv")
annotation <- merge(annotation1,annotation2, by = "ITAG")
results.sig$ITAG <- rownames(results.sig)  #change row.names to ITAG for merging
results.sig.annotated <- merge(results.sig,annotation,by = "ITAG") #This is merging to only sig genes
results.all.annotated <- merge(results$table, annotation,by = "ITAG") #This s
head(results.annotated)
```
annotation1<- read.delim("../ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
colnames(annotation1) <- c("ITAG", "SGN_annotation")
annotation2<- read.delim ("../ITAG2.3_all_Arabidopsis_annotated.tsv")
annotation <- merge(annotation1,annotation2, by = "ITAG")
results.sig$ITAG <- rownames(results.sig)  #change row.names to ITAG for merging
results.sig.annotated <- merge(results.sig,annotation,by = "ITAG") #This is merging to only sig genes
results.all.annotated <- merge(results$table, annotation,by = "ITAG") #This s
head(results.annotated)
head(results.sig.annotated)
write.table(results.all.annotated,"wtbmbr_wtcmbr_DE_all.txt",sep="\t",row.names=F)
write.table(results.sig.annotated,"wtcmbr_wtcother_DE.txt",sep="\t",row.names=F)
rownames(results$table)
results$table$ITAG <- rownames(results$table)
results.all.annotated <- merge(results$table, annotation,by = "ITAG") #This s
head(results.all.annotated)
write.table(results.all.annotated,"wtbmbr_wtcmbr_DE_all.txt",sep="\t",row.names=F)
write.table(results.all.annotated,"wtbmbr_wtcmbr_DE_all.txt",sep="\t",row.names=F)
write.table(results.sig.annotated,"wtbmbr_wtcmbr_DE.txt",sep="\t",row.names=F)
write.table(results.sig.annotated,"wtbmbr_wtcmbr_DE_sig.txt",sep="\t",row.names=F)
write.table(results.sig.annotated,"wtbmbr_wtcmbr_DE.txt",sep="\t",row.names=F)
write.table(results.all.annotated,"wtbmbr_wtcmbr_DE_all.txt",sep="\t",row.names=F)
write.table(results.all.annotated,"wtcmbr_wtcother_DE_all.txt",sep="\t",row.names=F)
write.table(results.sig.annotated,"wtcmbr_wtcother_DE.txt",sep="\t",row.names=F)
setwd("~/Dropbox/diffGeneExp/wtcmbr_wtcother")
sanalyzing RNAseq for differential expression of LCM data
---------------------------------------------------------
script modified from a script given to me by Aashish Ranjan called `edgeR_DE.R`
Ciera Martinez
##Install
`source("http://bioconductor.org/biocLite.R")`
`biocLite("edgeR")`
```{r}
library(edgeR)
```
##Read in Data
Read in raw count data per gene.
Add checknames to FALSE because it was making the columns unique.
```{r, results = 'hide'}
counts <- read.delim("../sam2countsResults.tsv",row.names=1)
#check the file
head(counts)
summary(counts)
colnames(counts)
#need to convert NA to 0 counts
counts[is.na(counts)] <- 0
```
Subset per DE expirement
========================
I am going to start by subsetting the particular treatments I am looking at.
####WT
###Marginal Blastozone vs Other
```{r}
wtcregion <- counts[,40:48]
head(wtcregion)
```
```{r}
#convert data to a form that edgeR wants
group <- c(rep("wtcmbr", 6), rep("wtcother",3))
d <- DGEList(counts=wtcregion,group=group)
d$samples
```
Computes counts per million (CPM) then,
Filter to exclude genes that have <2 counts in (N Rep)-1
```{r}
cpm.d<- cpm(d)
d <- d[rowSums(cpm.d>2)>=3,]
```
Estimate Common Negative Binomial Dispersion by Conditional Maximum Likelihood. Maximizes the negative binomial conditional common likelihood to give the estimate of the common dispersion across all tags.
```{r}
d <- estimateCommonDisp(d,verbose=T)
```
Normalize library
```{r}
d <- calcNormFactors(d)
```
Estimate overdispersion
Important so that the correct model is fit
```{r}
d <- estimateCommonDisp(d)
```
Calculate DE genes
```{r}
DEtest <- exactTest(d,pair=c("wtcmbr","wtcother"))
head(DEtest$table)
```
Create a table of the results, with multiple testing correction.
```{r}
results <- topTags(DEtest, n=Inf)
head(results)
```
These are the topTags, but I want to continue with all the DE genes.
How many genes are DE?
#How many genes in each direction?
```{r}
dim(results$table)
sum(results$table$FDR<.05) # How many are DE genes?
summary(decideTestsDGE(DEtest,p.value=.05))
```
Plot the results
First create a table of DE to highlight those with p < 0.05
```{r}
sig.genes <- rownames(results$table[results$table$FDR<0.05,])
```
Visualize with smear plot
```{r}
plotSmear(d,de.tags=sig.genes)
```
###Subset by significant score
```{r}
results.sig <- subset(tt$table, tt$table$FDR < 0.05)
head(results.sig)
dim(results.sig)
```
What are the genes that are misexpressed?
For this we need to add some annotation
Essentially we are merging two annotations files to 1.) only sig genes 2.) all genes
```{r}
annotation1<- read.delim("../ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
colnames(annotation1) <- c("ITAG", "SGN_annotation")
annotation2<- read.delim ("../ITAG2.3_all_Arabidopsis_annotated.tsv")
annotation <- merge(annotation1,annotation2, by = "ITAG")
#Making the only significant gene table
results.sig$ITAG <- rownames(results.sig)  #change row.names to ITAG for merging
results.sig.annotated <- merge(results.sig,annotation,by = "ITAG") #This is merging to only sig genes
#Making all table
results$table$ITAG <- rownames(results$table)
results.all.annotated <- merge(results$table, annotation,by = "ITAG") #This s
```
Write table with results
```{r}
write.table(results.all.annotated,"wtcmbr_wtcother_DE_all.txt",sep="\t",row.names=F)
write.table(results.sig.annotated,"wtcmbr_wtcother_DE.txt",sep="\t",row.names=F)
setwd("~/Dropbox/diffGeneExp/wtbmbr_wtbother")
counts <- read.delim("../sam2countsResults.tsv",check.names=FALSE,row.names=1)
head(counts)
summary(counts)
colnames(counts)
#need to convert NA to 0 counts
counts[is.na(counts)] <- 0
```
###Subset per DE expirement
I am going to start by subsetting the particular treatments I am looking at. In this case I am going to get rid of wtbmbr8 and wtbother1.4, because their count are very low and this could be the reason I am getting the errors from attempt 1.
```{r}
colnames(counts)
wtbregion <- counts[,c(32:34, 37:39)]
head(wtbregion)
colnames(wtbregion)
```
```{r}
group <- c(rep("wtbmbr", 3), rep("wtbother", 3))
d <- DGEList(counts=wtbregion,group=group)
```
```{r}
d$samples
```
```{r}
cpm.d <- cpm(d)
d <- d[rowSums(cpm.d>5)>=3,]
d <- estimateCommonDisp(d,verbose=T) #No error this time.
d <- calcNormFactors(d)
d <- estimateCommonDisp(d)
DEtest <- exactTest(d,pair=c("wtbmbr","wtbother"))
head(DEtest$table)
sum(DEtest$table$PValue<.05)
head(DEtest$table)
d <- d[rowSums(cpm.d>5)>=3,]
d <- estimateCommonDisp(d,verbose=T) #No error this time.
d <- calcNormFactors(d)
d$samples
```
```{r}
cpm.d <- cpm(d)
d <- d[rowSums(cpm.d>5)>=3,]
d <- estimateCommonDisp(d,verbose=T) #No error this time.
d <- calcNormFactors(d)
d <- estimateCommonDisp(d)
DEtest <- exactTest(d,pair=c("wtbmbr","wtbother"))
head(DEtest$table)
results <- topTags(DEtest, n=Inf)
head(results)
dim(results$table)
sum(results$table$FDR<.05) # How many are DE genes?
summary(decideTestsDGE(DEtest,p.value=.05))
sig.genes <- rownames(results$table[results$table$FDR<0.05,])
plotSmear(d,de.tags=sig.genes)
```
Subset by all the ones with a significant score
```{r}
results.sig <- subset(DEtest$table, DEtest$table$PValue < 0.05)
```
What are the genes that are misexpressed?
For this we need to add some annotation
Essentially we are merging two annotations files to 1.) only sig genes 2.) all genes
```{r}
annotation1<- read.delim("../ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
colnames(annotation1) <- c("ITAG", "SGN_annotation")
annotation2<- read.delim ("../ITAG2.3_all_Arabidopsis_annotated.tsv")
annotation <- merge(annotation1,annotation2, by = "ITAG")
#Making the only significant gene table
results.sig$ITAG <- rownames(results.sig)  #change row.names to ITAG for merging
results$table$ITAG <- rownames(results$table)
results.all.annotated <- merge(results$table, annotation,by = "ITAG") #This s
write.table(results.all.annotated,"wtbmbr_wtbother_DE_all.txt",sep="\t",row.names=F)
write.table(results.sig.annotated,"wtbmbr_wtbother_DE.txt",sep="\t",row.names=F)
setwd("~/Dropbox/diffGeneExp/wtambr_wtcmbr")
cpm.d <- cpm(d)
d <- d[rowSums(cpm.d>5)>=3,]
d <- estimateCommonDisp(d,verbose=T)
d <- calcNormFactors(d)
d <- estimateCommonDisp(d)
DEtest <- exactTest(d,pair=c("wtambr","wtcmbr"))
group <- c(rep("wtambr", 3), rep("wtcmbr", 4))
d <- DGEList(counts=WTambrVScmbr,group=group)
colnames(counts)
WTambrVScmbr <- counts[,c(24:26,42:45)]
head(WTambrVScmbr)
colnames(WTambrVScmbr)
group <- c(rep("wtambr", 3), rep("wtcmbr", 4))
d <- DGEList(counts=WTambrVScmbr,group=group)
d$samples
counts <- read.delim("../sam2countsResults.tsv",row.names=1)
head(counts)
summary(counts)
colnames(counts)
counts[is.na(counts)] <- 0
colnames(counts)
WTambrVScmbr <- counts[,c(24:26,42:45)]
head(WTambrVScmbr)
colnames(WTambrVScmbr)
group <- c(rep("wtambr", 3), rep("wtcmbr", 4))
d <- DGEList(counts=WTambrVScmbr,group=group)
d$samples
cpm.d <- cpm(d)
d <- d[rowSums(cpm.d>5)>=3,]
d <- estimateCommonDisp(d,verbose=T)
d <- calcNormFactors(d)
d <- estimateCommonDisp(d)
DEtest <- exactTest(d,pair=c("wtambr","wtcmbr"))
head(DEtest$table)
results <- topTags(DEtest, n=Inf)
head(results)
dim(results$table)
sum(results$table$FDR<.05) # How many are DE genes?
summary(decideTestsDGE(DEtest,p.value=.05))
sig.genes <- rownames(results$table[results$table$FDR<0.05,])
plotSmear(d,de.tags=sig.genes)
results.sig <- subset(DEtest$table, DEtest$table$PValue < 0.05)
annotation1<- read.delim("../ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
colnames(annotation1) <- c("ITAG", "SGN_annotation")
annotation2<- read.delim ("../ITAG2.3_all_Arabidopsis_annotated.tsv")
annotation <- merge(annotation1,annotation2, by = "ITAG")
results.sig$ITAG <- rownames(results.sig)  #change row.names to ITAG for merging
results.sig.annotated <- merge(results.sig,annotation,by = "ITAG") #This is merging to only sig genes
results$table$ITAG <- rownames(results$table)
results.all.annotated <- merge(results$table, annotation,by = "ITAG") #This s
write.table(results.all.annotated,"wtambr_wtcmbr_DE_all.txt",sep="\t",row.names=F)
write.table(results.sig.annotated,"wtambr_wtcmbr_DE.txt",sep="\t",row.names=F)
library(edgeR)
counts <- read.delim("../sam2countsResults.tsv",check.names=FALSE,row.names=1)
head(counts)
summary(counts)
colnames(counts)
#need to convert NA to 0 counts
counts[is.na(counts)] <- 0
colnames(counts)
wtaregion <- counts[,c(24:26, 27:31)]
head(wtaregion)
colnames(wtaregion)
```
```{r}
group <- c(rep("wtambr", 3), rep("wtaother", 5))
d <- DGEList(counts=wtaregion,group=group)
d$samples
cpm.d<- cpm(d)
d <- d[rowSums(cpm.d>5)>=3,]
d <- estimateCommonDisp(d,verbose=T)
d <- calcNormFactors(d)
d <- estimateCommonDisp(d)
DEtest <- exactTest(d,pair=c("wtambr","wtaother"))
tt <- topTags(DEtest, n=Inf)
head(tt)
sum(DEtest$table$PValue<.05)
summary(decideTestsDGE(DEtest,p.value=.05))
sig.genes <- rownames(DEtest$table[DEtest$table$PValue<0.05,])
plotSmear(d,de.tags=sig.genes)
```
results.sig <- subset(DEtest$table, DEtest$table$PValue < 0.05)
annotation1<- read.delim("../ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
colnames(annotation1)<- c("ITAG", "SGN_annotation")
annotation2<- read.delim ("../ITAG2.3_all_Arabidopsis_annotated.tsv")
annotation <- merge (annotation1,annotation2, by =1,1, all.x=TRUE)
head(annotation)
results.annotated <- merge(results.sig,annotation,by.x="row.names",by.y="ITAG",all.x=T,sort=F)
counts <- read.delim("../sam2countsResults.tsv",row.names=1)
colnames(counts)
WTambrVSbmbr <- counts[,c(24:26,32:34)]
head(WTambrVSbmbr)
colnames(WTambrVSbmbr)
group <- c(rep("wtambr", 3), rep("wtbmbr", 3))
d <- DGEList(counts=WTambrVSbmbr,group=group)
d$samples
cpm.d <- cpm(d)
d <- d[rowSums(cpm.d>5)>=3,]
d <- estimateCommonDisp(d,verbose=T)
library(edgeR)
counts <- read.delim("../sam2countsResults.tsv",row.names=1)
head(counts)
summary(counts)
colnames(counts)
counts[is.na(counts)] <- 0
colnames(counts)
WTambrVSbmbr <- counts[,c(24:26,32:34)]
head(WTambrVSbmbr)
colnames(WTambrVSbmbr)
group <- c(rep("wtambr", 3), rep("wtbmbr", 3))
d <- DGEList(counts=WTambrVSbmbr,group=group)
d$samples
cpm.d <- cpm(d)
d <- d[rowSums(cpm.d>5)>=3,]
d <- estimateCommonDisp(d,verbose=T)
d <- calcNormFactors(d)
d <- estimateCommonDisp(d)
DEtest <- exactTest(d,pair=c("wtambr","wtbmbr"))
head(DEtest$table)
DEtest <- exactTest(d,pair=c("wtambr","wtbmbr"))
head(DEtest$table)
results <- topTags(DEtest, n=Inf)
head(results)
sum(results$table$FDR<.05) # How many are DE genes?
summary(decideTestsDGE(DEtest,p.value=.05))
sig.genes <- rownames(results$table[results$table$FDR<0.05,])
plotSmear(d,de.tags=sig.genes)
```
WT
----
Marginal Blastozone A (distal) vs Marginal Blastzone in B (leaflet, mid) region
====================================================
```{r}
library(edgeR)
```
###Read in Data
Read in raw count data per gene.
```{r, results='hide'}
counts <- read.delim("../sam2countsResults.tsv",row.names=1)
#check the file
head(counts)
summary(counts)
colnames(counts)
#need to convert NA to 0 counts
counts[is.na(counts)] <- 0
```
###Subset per DE expirement
I am going to start by subsetting the particular treatments I am looking at.
```{r}
colnames(counts)
WTambrVSbmbr <- counts[,c(24:26,32:34)]
head(WTambrVSbmbr)
```
```{r}
group <- c(rep("wtambr", 3), rep("wtbmbr", 3))
d <- DGEList(counts=WTambrVSbmbr,group=group)
```
```{r}
d$samples
```
```{r}
cpm.d <- cpm(d)
d <- d[rowSums(cpm.d>5)>=3,]
d <- estimateCommonDisp(d,verbose=T)
d <- calcNormFactors(d)
d <- estimateCommonDisp(d)
DEtest <- exactTest(d,pair=c("wtambr","wtbmbr"))
head(DEtest$table)
results <- topTags(DEtest, n=Inf)
head(results)
dim(results$table)
sum(results$table$FDR<.05) # How many are DE genes?
summary(decideTestsDGE(DEtest,p.value=.05))
sig.genes <- rownames(results$table[results$table$FDR<0.05,])
plotSmear(d,de.tags=sig.genes)
```
Subset by all the ones with a significant score
```{r}
results.sig <- subset(DEtest$table, DEtest$table$PValue < 0.05)
```
What are the genes that are misexpressed?
For this we need to add some annotation
Essentially we are merging two annotations files to 1.) only sig genes 2.) all genes
```{r}
annotation1<- read.delim("../ITAG2.3_all_Arabidopsis_ITAG_annotations.tsv", header=FALSE)  #Changed to the SGN human readable annotation
colnames(annotation1) <- c("ITAG", "SGN_annotation")
annotation2<- read.delim ("../ITAG2.3_all_Arabidopsis_annotated.tsv")
annotation <- merge(annotation1,annotation2, by = "ITAG")
#Making the only significant gene table
results.sig$ITAG <- rownames(results.sig)  #change row.names to ITAG for merging
results.sig.annotated <- merge(results.sig,annotation,by = "ITAG") #This is merging to only sig genes
#Making all table
results$table$ITAG <- rownames(results$table)
results.all.annotated <- merge(results$table, annotation,by = "ITAG")
```
Write table with results
```{r}
write.table(results.all.annotated,"wtambr_wtbmbr_DE_all.txt",sep="\t",row.names=F)
write.table(results.sig.annotated,"wtambr_wtbmbr_DE.txt",sep="\t",row.names=F)
source('~/.active-rstudio-document', echo=TRUE)
